{"version":3,"sources":["map_ciclovia.js"],"names":[],"mappingsfile":"ciclovia.js","sourcesContent":["var geocoder = new google.maps.Geocoder();\r\nvar map;\r\nvar zap;\r\nvar gdl;\r\nvar directionsService;\r\nvar directionsDisplay;\r\nvar stepDisplay;\r\nvar markerArray=[];\r\nvar or;\r\nvar to;\r\nvar myRoute;\r\nfunction initialize_ciclovia() {\r\n  gdl = { lat: 20.659699, lng: -103.349609 };\r\n  zap = { lat: 20.666196, lng: -103.314743 };\r\n  \r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: gdl\r\n  });\r\n\r\n  // Instantiate an info window to hold step text.\r\n  stepDisplay = new google.maps.InfoWindow();\r\n\r\n\r\n    // Instantiate a directions service.\r\n  directionsService = new google.maps.DirectionsService,\r\n  directionsDisplay = new google.maps.DirectionsRenderer({\r\n      map: map,\r\n      draggable:true,\r\n      suppressMarkers:true,\r\n    });\r\n   directionsDisplay.addListener('directions_changed', function() {\r\n    console.log(\"aqui\");\r\n    computeTotalDistance(directionsDisplay.getDirections());\r\n  });\r\n\r\n  // Add two markers at the center of the map.\r\n  addMarker(gdl, map, \"A\", \"markerFrom\");\r\n  addMarker(zap, map, \"B\",\"markerTo\");\r\n  getAddress(gdl, 'markerFromAddress');\r\n  getAddress(zap, 'markerToAddress');\r\n  or={lat: parseFloat(document.getElementById('markerFromLat').value), lng: parseFloat(document.getElementById('markerFromLang').value)};\r\n  to={lat: parseFloat(document.getElementById('markerToLat').value), lng: parseFloat(document.getElementById('markerToLang').value)};\r\n  calculateAndDisplayRoute(directionsService, directionsDisplay, gdl, zap);\r\n  document.getElementById('markerFromLat').value = gdl.lat;\r\n  document.getElementById('markerFromLang').value = gdl.lng;\r\n  document.getElementById('markerToLat').value = zap.lat;\r\n  document.getElementById('markerToLang').value = zap.lng;\r\n\r\n}\r\n\r\nfunction handleEvent(event) {\r\n  var idMarker=this.myData;\r\n  \r\n  document.getElementById(idMarker+'Lat').value = event.latLng.lat();\r\n  document.getElementById(idMarker+'Lang').value = event.latLng.lng();\r\n  document.getElementById(idMarker+'Address').value = event.formatted_address;\r\n\r\n  getAddress(event.latLng, idMarker+'Address');\r\n  or={lat: parseFloat(document.getElementById('markerFromLat').value), lng: parseFloat(document.getElementById('markerFromLang').value)};\r\n  to={lat: parseFloat(document.getElementById('markerToLat').value), lng: parseFloat(document.getElementById('markerToLang').value)};\r\n  calculateAndDisplayRoute(directionsService, directionsDisplay, or, to);\r\n  \r\n}\r\n\r\nfunction clickMarker(event) {\r\n  var idMarker=this.myData;\r\n  getAddress(event.latLng, idMarker+'Address');\r\n}\r\n\r\n// Adds a marker to the map.\r\nfunction addMarker(location, map, name,id) {\r\n  var marker = new google.maps.Marker({\r\n    position: location,\r\n    icon: '/images/cycling.png',\r\n    label: name,\r\n    map: map,\r\n    draggable: true,\r\n    title: \"Marcador \",\r\n    myData: id,\r\n    animation: google.maps.Animation.DROP\r\n  });\r\n\r\n  //marker.addListener('drag', handleEvent);\r\n  marker.addListener('dragend', handleEvent);\r\n  marker.addListener('click', clickMarker);\r\n}\r\n\r\n//Get address string\r\nfunction getAddress(latLng, idInput)\r\n{\r\n  geocoder.geocode({\r\n    latLng: latLng\r\n  }, function(responses) {\r\n    if (responses && responses.length > 0) {      \r\n      document.getElementById(idInput).value = responses[0].formatted_address;\r\n    } else {\r\n      document.getElementById(idInput).value = 'Cannot determine address at this location.';\r\n    }\r\n  });\r\n}\r\n\r\nfunction calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {\r\n  // First, clear out any existing markerArray\r\n  // from previous calculations.\r\n  for (i = 0; i < markerArray.length; i++) {\r\n    markerArray[i].setMap(null);\r\n  }\r\n  directionsService.route({\r\n    origin: pointA,\r\n    destination: pointB,\r\n    //travelMode: google.maps.TravelMode.BICYCLING\r\n    travelMode: google.maps.TravelMode.WALKING\r\n  }, function(response, status) {\r\n    if (status == google.maps.DirectionsStatus.OK) {\r\n      directionsDisplay.setDirections(response);\r\n      showSteps(response);\r\n    } else {\r\n      window.alert('Directions request failed due to ' + status);\r\n    }\r\n  });\r\n}\r\nfunction showSteps(directionResult) {\r\n  // For each step, place a marker, and add the text to the marker's\r\n  // info window. Also attach the marker to an array so we\r\n  // can keep track of it and remove it when calculating new\r\n  // routes.\r\n  myRoute = directionResult.routes[0].legs[0];\r\n\r\n  for (var i = 0; i < myRoute.steps.length; i++) {\r\n      var marker = new google.maps.Marker({\r\n        position: myRoute.steps[i].start_point,\r\n        map: map\r\n      });\r\n      attachInstructionText(marker, myRoute.steps[i].instructions);\r\n      markerArray[i] = marker;\r\n  }\r\n}\r\nfunction attachInstructionText(marker, text) {\r\n  google.maps.event.addListener(marker, 'click', function() {\r\n    stepDisplay.setContent(text);\r\n    stepDisplay.open(map, marker);\r\n  });\r\n}\r\nfunction computeTotalDistance(result) {\r\n  var total = 0;\r\n  var myroute = result.routes[0];\r\n  for (var i = 0; i < myroute.legs.length; i++) {\r\n    total += myroute.legs[i].distance.value;\r\n  }\r\n  total = total / 1000;\r\n  document.getElementById('distance').value = total + ' km';\r\n\r\n  myRoute = result.routes[0].legs[0];\r\n\r\n  // First, clear out any existing markerArray\r\n  // from previous calculations.\r\n  for (i = 0; i < markerArray.length; i++) {\r\n    markerArray[i].setMap(null);\r\n  }\r\n  for (var i = 0; i < myRoute.steps.length; i++) {\r\n      var marker = new google.maps.Marker({\r\n        position: myRoute.steps[i].start_point,\r\n        map: map\r\n      });\r\n      attachInstructionText(marker, myRoute.steps[i].instructions);\r\n      markerArray[i] = marker;\r\n  }\r\n}\r\ngoogle.maps.event.addDomListener(window, 'load', initialize_ciclovia);"]}