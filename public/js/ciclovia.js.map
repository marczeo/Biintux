{"version":3,"sources":["map_ciclovia.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ciclovia.js","sourcesContent":["/**\r\n* @fileoverview Manipulating Google Maps API to create \"bikeways\"\r\n*\r\n* @author Marco Gómez\r\n* @version 0.1\r\n*/\r\n\r\nvar geocoder;\r\nvar map;\r\nvar zap;\r\nvar gdl;\r\nvar directionsService;\r\nvar directionsDisplay;\r\nvar stepDisplay;\r\nvar markerArray=[];\r\nvar origin;\r\nvar destination;\r\nvar myRoute;\r\nvar leRoute;\r\nvar flightPath;\r\n\r\n/**\r\n* Initialize map and default values\r\n* @param  {void}\r\n* @returns {boolean} Estado de la eliminación\r\n*/\r\nfunction initialize_ciclovia() {\r\n\r\n  //New instantiate map from google \r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    zoom: 12,\r\n    center: gdl\r\n  });\r\n\r\n  //New instantiate Geocoder\r\n  geocoder = new google.maps.Geocoder();\r\n\r\n  //Instantiate an info window to hold step text.\r\n  stepDisplay = new google.maps.InfoWindow();\r\n\r\n\r\n  // Instantiate a directions service.\r\n  directionsService = new google.maps.DirectionsService;\r\n  directionsDisplay = new google.maps.DirectionsRenderer({\r\n    map: map,\r\n    draggable:true,\r\n    suppressMarkers:true,\r\n  });\r\n  \r\n  directionsDisplay.addListener('directions_changed', function() {\r\n    computeTotalDistance(directionsDisplay.getDirections());\r\n  });\r\n\r\n  //Latitude n longitudo two places\r\n  gdl = { lat: 20.659699, lng: -103.349609 };\r\n  zap = { lat: 20.666196, lng: -103.314743 };\r\n  origin={lat: gdl.lat, lng: gdl.lng};\r\n  destination={lat: zap.lat, lng: zap.lng};\r\n\r\n  //Add two markers at the center of the map.\r\n  addMarker(gdl, \"A\", \"markerFrom\");\r\n  addMarker(zap, \"B\",\"markerTo\");\r\n  getAddress(gdl, 'markerFromAddress');\r\n  getAddress(zap, 'markerToAddress');\r\n  \r\n  //Initialize form inputs\r\n  document.getElementById('markerFromLat').value = gdl.lat;\r\n  document.getElementById('markerFromLang').value = gdl.lng;\r\n  document.getElementById('markerToLat').value = zap.lat;\r\n  document.getElementById('markerToLang').value = zap.lng;\r\n\r\n  //Create a initial route\r\n  calculateAndDisplayRoute(directionsService, directionsDisplay, origin, destination);\r\n}\r\n\r\n\r\nfunction moveMarkerEvent(event) {\r\n  var idMarker=this.myData;  \r\n\r\n  //Update form inputs\r\n  document.getElementById(idMarker+'Lat').value = event.latLng.lat();\r\n  document.getElementById(idMarker+'Lang').value = event.latLng.lng();\r\n  document.getElementById(idMarker+'Address').value = event.formatted_address;\r\n\r\n  getAddress(event.latLng, idMarker+'Address');\r\n\r\n  //Update values origin and destinitacion markers of form\r\n  origin={lat: parseFloat(document.getElementById('markerFromLat').value), lng: parseFloat(document.getElementById('markerFromLang').value)};\r\n  destination={lat: parseFloat(document.getElementById('markerToLat').value), lng: parseFloat(document.getElementById('markerToLang').value)};\r\n  \r\n  calculateAndDisplayRoute(directionsService, directionsDisplay, origin, destination);\r\n  \r\n}\r\n\r\n// Adds a marker to the map.\r\nfunction addMarker(location, name,id) {\r\n  var marker = new google.maps.Marker({\r\n    position: location,\r\n    icon: '/images/cycling.png',\r\n    label: name,\r\n    map: map,\r\n    draggable: true,\r\n    title: \"Marcador \",\r\n    myData: id,\r\n    animation: google.maps.Animation.DROP\r\n  });\r\n  marker.addListener('dragend', moveMarkerEvent);\r\n}\r\n\r\n//Get address string\r\nfunction getAddress(latLng, idInput)\r\n{\r\n  geocoder.geocode({\r\n    latLng: latLng\r\n  }, function(responses) {\r\n    if (responses && responses.length > 0) {      \r\n      document.getElementById(idInput).value = responses[0].formatted_address;\r\n    } else {\r\n      document.getElementById(idInput).value = 'Cannot determine address at this location.';\r\n    }\r\n  });\r\n}\r\n\r\nfunction calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {\r\n  // First, clear out any existing markerArray\r\n  // from previous calculations.\r\n  clearMarkers();\r\n\r\n  directionsService.route({\r\n    origin: pointA,\r\n    destination: pointB,\r\n    //travelMode: google.maps.TravelMode.BICYCLING\r\n    travelMode: google.maps.TravelMode.WALKING\r\n  }, function(response, status) {//directionResult\r\n    if (status == google.maps.DirectionsStatus.OK) {\r\n      directionsDisplay.setDirections(response);\r\n      //steps\r\n      myRoute = response.routes[0].legs[0];\r\n    } else {\r\n      window.alert('Directions request failed due to ' + status);\r\n    }\r\n  });\r\n}\r\nfunction attachInstructionText(marker, text) {\r\n  google.maps.event.addListener(marker, 'click', function() {\r\n    stepDisplay.setContent(text);\r\n    stepDisplay.open(map, marker);\r\n  });\r\n}\r\nfunction computeTotalDistance(result) {\r\n  var flightPlanCoordinates=[];\r\n  document.getElementById('markerList').value=\"\";\r\n  // First, clear out any existing markerArray\r\n  // from previous calculations.\r\n  clearMarkers();\r\n  var total = 0;\r\n  myroute = result.routes[0];\r\n  for (var i = 0; i < myroute.legs.length; i++) {\r\n    total += myroute.legs[i].distance.value;\r\n  }\r\n  total = total / 1000;\r\n  document.getElementById('distance').value = total + ' km';\r\n\r\n  leRoute = result.routes[0].legs[0];\r\n\r\n  console.log(\"lineas: \" +leRoute.steps.length);\r\n  for (var i = 0; i < leRoute.steps.length; i++) {\r\n    var marker = new google.maps.Marker({\r\n      position: leRoute.steps[i].start_point,\r\n      map: map\r\n    });\r\n    attachInstructionText(marker, leRoute.steps[i].instructions);\r\n    markerArray[i] = marker;\r\n    flightPlanCoordinates[i]=leRoute.steps[i].start_point;\r\n    document.getElementById('markerList').value+=leRoute.steps[i].start_point;\r\n  }\r\n  console.log(\"Origen: \" + origin.lat+\", \"+ origin.lng);\r\n  console.log(\"Destino: \" + destination.lat+\", \"+ destination.lng);\r\n  markerArray[i]=new google.maps.Marker({\r\n    position: { lat: destination.lat, lng: destination.lng },\r\n    map: map\r\n  });\r\n  document.getElementById('markerList').value+=\"(\"+ destination.lat +\",\" +destination.lng +\")\";\r\n  flightPlanCoordinates[i]={ lat: destination.lat, lng: destination.lng };\r\n\r\n  \r\n  flightPath = new google.maps.Polyline({\r\n    path: flightPlanCoordinates,\r\n    geodesic: true,\r\n    strokeColor: '#FF0000',\r\n    strokeOpacity: 1.0,\r\n    strokeWeight: 2\r\n  });\r\n  \r\n  var encodePath=google.maps.geometry.encoding.encodePath(flightPath.getPath());\r\n  document.getElementById('encodePath').value =encodePath.replace(/\\\\/g,\"\\\\\\\\\");  \r\n  \r\n}\r\n\r\nfunction clearMarkers()\r\n{\r\n  for (i = 0; i < markerArray.length; i++) {\r\n    markerArray[i].setMap(null);\r\n  }\r\n  markerArray=[];\r\n}\r\ngoogle.maps.event.addDomListener(window, 'load', initialize_ciclovia);\r\n\r\n\r\n"]}